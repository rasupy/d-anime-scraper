[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "d-anime-scraper"
version = "0.6.7"  # Single-source in d_anime_scraper/version.py (keep in sync manually or add automation)
description = "dアニメストア 今期アニメ一覧 スクレイピングツール"
readme = "README.md"
authors = [
  { name = "Your Name", email = "you@example.com" }
]
license = { file = "LICENSE" }
requires-python = ">=3.10"
keywords = ["scraping", "anime", "dアニメ", "cli", "tool"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Utilities",
]
dependencies = [
  "requests>=2.31.0",
  "beautifulsoup4>=4.12.2",
  "lxml>=4.9.3",
]

[project.optional-dependencies]
dynamic = ["playwright"]
dev = ["pytest", "pytest-cov", "mypy", "ruff", "pyinstaller"]

[project.scripts]
# CLI (静的取得 / option 付き) 用 (package path 更新)
d-anime-scraper = "d_anime_scraper.scraper:_cli"
# GUI ランチャー (tkinter) 用
d-anime-scraper-gui = "gui_launcher:main"

[tool.setuptools]
# ルート直下単一モジュール構成 (scraper.py / gui_launcher.py) のため packages 指定は不要
packages = ["d_anime_scraper"]
py-modules = ["gui_launcher"]

[tool.pytest.ini_options]
addopts = "-q"
python_files = ["test_*.py", "*_test.py"]
testpaths = ["tests"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
# Ruff 設定は本ファイルに集約 (旧 ruff.toml は削除予定)
# 適用ルール: エラー/フォーマット(E/F), import(I), bugbear(B), pyupgrade(UP), simplification(SIM), pep8-naming(N)
select = ["E", "F", "I", "B", "UP", "SIM", "N"]
ignore = ["E501"]  # 行長は独自基準 (100) で管理し折り返し強制しない

[tool.mypy]
python_version = "3.12"
warn_unreachable = true
warn_unused_ignores = true
strict_optional = true
exclude = ["dist/", "build/", "OUT/"]
